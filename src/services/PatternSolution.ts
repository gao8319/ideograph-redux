// Generated by https://quicktype.io

export namespace Solution {

    export interface Pattern {
        nodes: PatternNode[];
        edges: PatternEdge[];
        constraints: PatternConstraint[];
    }

    export interface PatternConstraint {
        patternId: string;
        targetType: string;
        targetPatternId: string;
        property: string;
        operator: string;
        value: string;
    }

    export interface PatternEdge {
        patternId: string;
        type: string;
        fromPatternId: string;
        toPatternId: string;
    }

    export interface PatternNode {
        patternId: string;
        type: string;
    }




    // Generated by https://quicktype.io

    export interface PatternSolution {
        nodes: Record<string, WorkspaceNode>;
        edges: Record<string, WorkspaceEdge>;
    }

    export interface WorkspaceEdge {
        _id: string;
        _class: string;
        clusterId: number;
        edgeId: number;
        edgeLabel: string;
        evidences: Evidences;
        fromId: number;
        name: string;
        properties: Evidences;
        relationId: number;
        source: string;
        tagScore: Evidences;
        toId: number;
        // trustedAccessibility: number;
        // trustedCorrectness: number;
        // trustedLevel: number;
        // trustedReliability: number;
        // trustedSafety: number;
        // trustedTimeliness: number;
        // trustedValue: number;
    }

    export interface Evidences {
    }

    export interface WorkspaceNode {
        _id: string;
        _class: string;
        name: string;
        nodeId: number;
        types: string;
        tags: null;
        judgeParent: boolean;
        properties: { [key: string]: string };
    }
}